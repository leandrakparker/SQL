# I utilized SQLite Studio to query a database with multiple tables to quantify statistics about customer and order data. 

# How many orders were placed in January?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

# How many of those orders were for an iPhone?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE Product = 'IPhone'
AND length(orderID) = 6
AND orderID <> 'Order ID';

# Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT c.acctnum
FROM BIT_DB.customers c
INNER JOIN BIT_DB.FebSales feb
ON c.order_id = feb.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

# Which product was the cheapest one sold in January, and what was the price?

// Using a subquery:
SELECT DISTINCT Product
, price as LowestPrice
FROM BIT_DB.JanSales
WHERE price IN (
                SELECT min(price) 
                FROM BIT_DB.JanSales);

// Using Group BY
SELECT DISTINCT Product
, MIN(price)
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY price ASC
LIMIT 1;

# What is the total revenue for each product sold in January?
SELECT Product
, SUM(Quantity)*price as Revenue
FROM BIT_DB.JanSales
GROUP BY Product;

# Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product
, SUM(Quantity)
, SUM(Quantity)*price as Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

# How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(DISTINCT c.acctnum)
, AVG(quantity*price) as AvgAmountSpent
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers c
ON feb.orderID = c.order_id
WHERE Feb.Quantity > 2
AND length(orderID) = 6
AND orderID <> 'Order ID';

# List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product
, SUM(quantity) as total_items_sold
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;
